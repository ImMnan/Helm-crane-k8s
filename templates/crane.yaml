apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: {{ .Values.deploymentRbac.role }}
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      role: {{ .Values.deploymentRbac.role }}
      crane: ready
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        role: {{ .Values.deploymentRbac.role }}
        crane: ready
    spec:
      serviceAccountName: {{ template "blazemeter-crane.serviceAccountName" . }}
      automountServiceAccountToken: true
      containers:
      - env:
        {{ if .Values.env.secret.enable }}
        - name: AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{.Values.env.secret.secretName }}
              key: {{ .Values.env.secret.secretKey }}
        {{ else }}
        - name: AUTH_TOKEN
          value: {{ .Values.env.token }}
        {{ end -}}
        - name: HARBOR_ID
          value: {{ .Values.env.harbour_id }}
        - name: SHIP_ID
          value: {{ .Values.env.ship_id }}
        - name: CONTAINER_MANAGER_TYPE
          value: KUBERNETES
        {{ if .Values.imageOverride.enable }}
        - name: IMAGE_OVERRIDES
          value: {{ .Values.imageOverride.images | toJson | quote }}
        - name: DOCKER_REGISTRY
          value: {{ .Values.imageOverride.docker_registry | quote }}
        - name: AUTO_KUBERNETES_UPDATE
          value: {{ .Values.imageOverride.auto_update | quote }}
        - name: AUTO_UPDATE_CONTAINERS_WHILE_RUNNING
          value: {{ .Values.imageOverride.auto_update_containers_while_running | quote }}
        {{ else }}    
        - name: IMAGE_OVERRIDES
          value: '{}'
        - name: DOCKER_REGISTRY
          value: {{ .Values.image.docker_registry | quote }}
        - name: AUTO_KUBERNETES_UPDATE
          value: {{ .Values.image.auto_update | quote }}
        - name: AUTO_UPDATE_CONTAINERS_WHILE_RUNNING
          value: {{ .Values.image.auto_update_containers_while_running | quote }}
        {{ end -}}          
        {{ if .Values.proxy.enable -}}
          {{ if .Values.proxy.http_proxy }}
        - name: HTTP_PROXY
          value: {{ .Values.proxy.http_path }}
          {{- end -}}
          {{ if .Values.proxy.https_proxy }}
        - name: HTTPS_PROXY
          value: {{ .Values.proxy.https_path }}
          {{- end }}
        - name: NO_PROXY
          value: {{ .Values.proxy.no_proxy }}
        {{ end -}}
        {{ if and (.Values.ca_bundle.enable) (eq .Values.gridProxy.enable false) }} 
        - name: REQUESTS_CA_BUNDLE
          value: {{ .Values.ca_bundle.volume.mount_path }}/{{ .Values.ca_bundle.request_ca_bundle }}
        - name: AWS_CA_BUNDLE
          value: {{ .Values.ca_bundle.volume.mount_path }}/{{ .Values.ca_bundle.aws_ca_bundle }}
        - name: KUBERNETES_CA_BUNDLE_MOUNT
          value: REQUESTS_CA_BUNDLE={{ .Release.Name }}-configmap={{ .Values.ca_bundle.request_ca_bundle }}:AWS_CA_BUNDLE={{ .Release.Name }}-configmap={{ .Values.ca_bundle.aws_ca_bundle }}
        {{ end -}}
        {{ if and ( .Values.gridProxy.enable ) (eq .Values.ca_bundle.enable false) }} 
        - name: A_ENVIRONMENT
          value: {{ .Values.gridProxy.a_environment }}
        - name: TLS_KEY_GRID
          value: {{ .Values.gridProxy.volume.mount_path }}/{{ .Values.gridProxy.tlsKeyGrid }}
        - name: TLS_CERT_GRID
          value: {{ .Values.gridProxy.volume.mount_path }}/{{ .Values.gridProxy.tlsCertGrid }}
        - name: KUBERNETES_CA_BUNDLE_MOUNT
          value: TLS_KEY_GRID={{ .Release.Name }}-configmap={{ .Values.gridProxy.tlsKeyGrid }}:TLS_CERT_GRID={{ .Release.Name }}-configmap={{ .Values.gridProxy.tlsCertGrid }}
        {{ end -}}        
        {{ if and (.Values.istio_ingress.enable)  (eq .Values.nginx_ingress.enable false) }}
        - name: KUBERNETES_WEB_EXPOSE_TYPE
          value: ISTIO
        - name: KUBERNETES_WEB_EXPOSE_SUB_DOMAIN
          value: {{ .Values.istio_ingress.web_expose_subdomain | quote }}
        - name: KUBERNETES_WEB_EXPOSE_TLS_SECRET_NAME
          value: {{ .Values.istio_ingress.credentialName | quote }}
        - name: KUBERNETES_SERVICE_USE_TYPE
          value: CLUSTERIP
        - name: KUBERNETES_USE_PRE_PULLING
          value: {{ .Values.istio_ingress.pre_pulling | quote }}
        - name: KUBERNETES_SERVICES_BLOCKING_GET
          value: "true"
        - name: KUBERNETES_ISTIO_GATEWAY_NAME
          value: {{ .Values.istio_ingress.istio_gateway_name | quote }}
        {{ end -}}
        {{ if and (.Values.nginx_ingress.enable)  (eq .Values.istio_ingress.enable false)}}
        - name: KUBERNETES_WEB_EXPOSE_TYPE
          value: INGRESS
        - name: KUBERNETES_INGRESS_CLASS
          value: "nginx"
        - name: KUBERNETES_SERVICE_USE_TYPE
          value: CLUSTERIP
        - name: KUBERNETES_WEB_EXPOSE_SUB_DOMAIN
          value: {{ .Values.nginx_ingress.web_expose_subdomain | quote }}
        - name: KUBERNETES_WEB_EXPOSE_TLS_SECRET_NAME
          value: {{ .Values.nginx_ingress.credentialName | quote }}
        - name: PARALLEL_HANDLERS_COUNT
          value: '50'
        - name: USE_PARALLEL_HANDLER
          value: 'true'
        - name: RUN_HEALTH_WEB_SERVICE
          value: 'true'
        {{end -}}
        {{ if .Values.non_privilege_container.enable }}
        - name: INHERIT_RUNNING_USER_AND_GROUP
          value: 'true'
        {{ end }}
        {{- if .Values.labels.enable }}
        - name: KUBERNETES_LABELS
          value: {{ .Values.labels.syntax | toJson | quote }}
        {{ end -}}
        {{ if .Values.toleration.enable }}
        - name: KUBERNETES_TOLERATIONS_JSON
          value: {{ .Values.toleration.syntax | toJson | quote }}
        {{ end -}}
        {{ if .Values.nodeSelector.enable }}
        - name: KUBERNETES_NODE_SELECTOR_JSON
          value: {{ .Values.nodeSelector.syntax | toJson | quote }}
        {{ end -}}
        {{ if .Values.executorResources.requests.enable }}
        - name: KUBERNETES_RESOURCES_DEFAULT_CPU
          value: {{ .Values.executorResources.requests.CPU | quote }}
        - name: KUBERNETES_RESOURCES_DEFAULT_MEM
          value: {{ .Values.executorResources.requests.MEM | quote }}
        {{ end -}}
        {{ if .Values.executorResources.limits.enable }}
        - name: KUBERNETES_RESOURCES_LIMITS_CPU
          value: {{ .Values.executorResources.limits.CPU | quote }}
        - name: KUBERNETES_RESOURCES_LIMITS_MEMORY
          value: {{ .Values.executorResources.limits.MEM | quote }}
        {{ end -}}
        {{ if .Values.ephemeralStorage.enable }}
        - name: KUBERNETES_LIMITS_EPHEMERAL_STORAGE
          value: {{ .Values.ephemeralStorage.limits | quote }}
        - name: KUBERNETES_REQUESTS_EPHEMERAL_STORAGE
          value: {{ .Values.ephemeralStorage.requests | quote }}
        {{ end -}}
        {{ if .Values.gridProxy.enable }}
        - name: DODUO_PORT
          value: {{ .Values.gridProxy.doduoPort | quote }}
        - name: TLS_CERT_GRID
          value: {{ .Values.gridProxy.tlsCertGrid | quote }}
        - name: TLS_KEY_GRID
          value: {{ .Values.gridProxy.tlsKeyGrid | quote }}
        {{ end -}}
        {{ if .Values.imageOverride.enable }} 
        image: {{ .Values.imageOverride.image }}:{{ .Values.imageOverride.tag }}
        imagePullPolicy: {{ .Values.imageOverride.pullPolicy }}
        {{ else }}
        image: {{ .Values.image.image }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{ end -}}
        name: crane-container
        {{ if or (.Values.craneResources.requests.enable) (.Values.craneResources.limits.enable) }} 
        resources:
          {{- if .Values.craneResources.requests.enable }} 
          requests:
            memory: {{ .Values.craneResources.requests.MEM }}
            cpu: {{ .Values.craneResources.requests.CPU }}
          {{ end -}}
          {{ if .Values.craneResources.limits.enable }}
          limits:
            memory: {{ .Values.craneResources.limits.MEM }}
            cpu: {{ .Values.craneResources.limits.CPU }}         
          {{ end -}}
        {{ end -}}
        {{ if .Values.non_privilege_container.enable }}  
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: {{ .Values.non_privilege_container.runAsGroup }} 
          runAsUser: {{ .Values.non_privilege_container.runAsUser }}        
      {{ end -}}
        {{ if and ( .Values.ca_bundle.enable ) ( eq .Values.gridProxy.enable false ) }} 
        volumeMounts:
        - name: {{ .Values.ca_bundle.volume.volume_name }}
          mountPath: {{ .Values.ca_bundle.volume.mount_path }}
          readOnly: {{ .Values.ca_bundle.volume.readOnly }}
      volumes:
      - name: {{ .Values.ca_bundle.volume.volume_name }}
        configMap:
          name: {{ .Release.Name }}-configmap
        {{ end -}}
        {{ if and ( .Values.gridProxy.enable ) ( eq .Values.ca_bundle.enable false ) }}         
        volumeMounts:
        - name: {{ .Values.gridProxy.volume.volume_name }}
          mountPath: {{ .Values.gridProxy.volume.mount_path }}
          readOnly: {{ .Values.gridProxy.volume.readOnly }}
      volumes:
      - name: {{ .Values.gridProxy.volume.volume_name }}
        configMap:
          name: {{ .Release.Name }}-configmap
        {{ end }}
      restartPolicy: {{ .Values.restartPolicy }}
      terminationGracePeriodSeconds: 30